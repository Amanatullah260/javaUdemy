package com.in28minutes.loops;

public class MyNumber {

	private int number;

	public MyNumber(int number) {
		this.number = number;
}

	public boolean isPrime() {
		// 2 to number-1
		// how can check if a number is divisible by 2?

		for (int i = 2; i <= number - 1; i++) {
			if (number % 2 == 0) {
		return false;

			}

		}

		return true;
	}

}

package com.in28minutes.loops;

import com.in28minutes.loops.MyNumber;

public class MyNumberRunner {

	public static void main(String[] args) {
		MyNumber number = new MyNumber(9);
		boolean isPrime = number.isPrime();
		System.out.println("isPrime " + isPrime);

	}
}


OUTPUT:
isPrime true

                  public static void main(String[] args) {
		      MyNumber number = new MyNumber(3);
		        boolean isPrime = number.isPrime();
		         System.out.println("isPrime " + isPrime);

	}
output:
isPrime true

                   public static void main(String[] args) {
		MyNumber number = new MyNumber(6);
		boolean isPrime = number.isPrime();
		System.out.println("isPrime " + isPrime);

	}
output:
isPrime false

                public int sumUptoN() {
		// 1+2+3+..+number
		int sum = 0;
		for (int i = 1; i <= number; i++) {
			sum = sum + i;
		}
		return sum;
	}
              public static void main(String[] args) {
		MyNumber number = new MyNumber(6);

		boolean isPrime = number.isPrime();
		System.out.println("isPrime " + isPrime);

		int sum = number.sumUptoN();
		System.out.println("sumUptoN" + sum);
	}

}
output:
isPrime false
sumUptoN21

                 public int sumOfDivisors() {
		// 6 except 1, 6 =>2,3
		// 2 + 3 + 4 + 5

		int sum = 0;

		for (int i = 2; i <= number - 1; i++) {
			if (number % i == 0) {
				sum = sum + i;
			}
		}
		return sum;
	}

}
                  MyNumber number = new MyNumber(6);
                 int sumOfDivisors = number.sumOfDivisors();
		System.out.println("sumOfDivisors" + sumOfDivisors);

output:
isPrime false
sumUptoN21
sumOfDivisors5

                  MyNumber number = new MyNumber(9);
                 int sumOfDivisors = number.sumOfDivisors();
		System.out.println("sumOfDivisors" + sumOfDivisors);

output:
isPrime false
sumUptoN21
sumOfDivisors3
                 public void printNumberTriangle() {
		// 1
		// 1 2
		// 1 2 3
		// 1 2 3 4
		// 1 2 3 4 5
		for(int i=1;i<=number;i++) {
			System.out.print(i + " ");
		}
		}
                 MyNumber number = new MyNumber(9);

		boolean isPrime = number.isPrime();
		System.out.println("isPrime " + isPrime);

		int sum = number.sumUptoN();
		System.out.println("sumUptoN" + sum);

		int sumOfDivisors = number.sumOfDivisors();
		System.out.println("sumOfDivisors" + sumOfDivisors);

		number.printNumberTriangle();
	}
output:
isPrime true
sumUptoN45
sumOfDivisors3
1 2 3 4 5 6 7 8 9 
                        for(int i=1;i<=number;i++) {
			for (int j = 1; j <= i; j++) {
				System.out.print(i + " ");
output:
isPrime true
sumUptoN15
sumOfDivisors0
1 2 2 3 3 3 4 4 4 4 5 5 5 5 5

                        for(int i=1;i<=number;i++) {
			for (int j = 1; j <= i; j++) {
				System.out.print(j + " ");
		} 
output:
sumOfDivisors0
1 1 2 1 2 3 1 2 3 4 1 2 3 4 5

 
                  public void printNumberTriangle() {
		// 1
		// 1 2
		// 1 2 3
		// 1 2 3 4
		// 1 2 3 4 5
		for(int i=1;i<=number;i++) {
			for (int j = 1; j <= i; j++) {
				System.out.print(j + " ");

		}
		System.out.println();
		}

	}

}


number.printNumberTriangle();


output:
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 

